datasource db {
  provider = "postgresql"
  url      = env("API_DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Task {
  id        String   @id
  userId    String
  label     String
  done      Boolean
  createdAt DateTime
}

model OfferDetail {
  id                      Int                      @id @default(autoincrement())
  companyId               Int
  companyName             String
  offertitle              String
  recruitmentOverview     RecruitmentOverview?
  applicationRequirements ApplicationRequirements?
  jobDetails              String
  workLocationDetail      String
  treatmentBenefits       TreatmentBenefits?
  otherFeatures           String
  imageUrls               String[]
}

model RecruitmentOverview {
  id          Int         @unique
  occupation  String
  industry    String
  salary      String
  location    String
  feature     String
  offerDetail OfferDetail @relation(fields: [id], references: [id])
}

model ApplicationRequirements {
  id                    Int         @unique
  mandatoryRequirements String
  idealPerson           String
  selectionFlow         String
  offerDetail           OfferDetail @relation(fields: [id], references: [id])
}

model TreatmentBenefits {
  id              Int         @unique
  salarySystem    String
  annualIncome    String
  workingHours    String
  holidayVacation String
  allowances      String
  promotion       String
  insurance       String
  offerDetail     OfferDetail @relation(fields: [id], references: [id])
}

model User {
  userId             String   @id
  birthday           DateTime
  address            String
  education          String
  schoolType         String
  gender             String
  schoolName         String
  academicDiscipline String
  favoriteGame       String
  createdAt          DateTime
  firstName          String
  lastName           String
  desiredIndustry    String[]
}

enum OfferStatus {
  PENDING
  ACCEPTED
  REJECTED
}

model Offer {
  id          Int         @id @default(autoincrement())
  companyId   Int
  userId      String
  title       String
  salary      String
  location    String[]
  description String
  status      OfferStatus
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @default(now()) @updatedAt
}

model Skill {
  id     Int    @id @default(autoincrement())
  userId String
  name   String
  level  String
}

model Company {
  id           Int      @id @default(autoincrement())
  companyName  String
  annualIncome String
  industry     String[]
  occupation   String[]
}

model Notification {
  id        Int      @id @default(autoincrement())
  userId    String
  title     String
  content   String
  url       String
  isRead    Boolean  @default(false)
  createdAt DateTime @default(now())
}

model Message {
  id        Int      @id @default(autoincrement())
  userId    String
  companyId Int
  content   String
  createdAt DateTime @default(now())
}

model Game {
  id   Int    @id @default(autoincrement())
  name String
}

model GameRank {
  id     Int    @id @default(autoincrement())
  userId String
  gameId Int
  season String
  rank   String
}

//skill

model SkillPr {
  userid String @id
  skill1 String
  skill2 String
  skill3 String
  selfPr String
}

//experience

model Research {
  userid       String     @id
  theme        String
  details      String
  achievements Boolean
  awards       Boolean
  paper        Boolean
  presentation String
  experience   Experience @relation(fields: [userid], references: [userid])
}

model Competition {
  userid      String     @id
  achievement Boolean
  details     String
  experience  Experience @relation(fields: [userid], references: [userid])
}

model WorkExperience {
  userid      String     @id
  internship  Boolean
  partTimeJob Boolean
  details     String
  experience  Experience @relation(fields: [userid], references: [userid])
}

model Experience {
  userid      String          @id
  research    Research?
  competition Competition?
  experience  WorkExperience?
}

//

model Preference {
  userid               String   @id
  companySelection     String[]
  companySelectionType String[]
  preferredLocations   String[]
  preferredDetail      String
}
